<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hbfintech.pay.trade.repository.dao.PayBankProductDao">
  <resultMap id="BaseResultMap" type="com.hbfintech.pay.trade.repository.entity.PayBankProduct">
    <id column="bank_prod_id" jdbcType="BIGINT" property="bankProdId" />
    <result column="bank_code" jdbcType="VARCHAR" property="bankCode" />
    <result column="bank_name" jdbcType="VARCHAR" property="bankName" />
    <result column="prod_code" jdbcType="VARCHAR" property="prodCode" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="valid" jdbcType="BIT" property="valid" />
    <result column="oper_id" jdbcType="BIGINT" property="operId" />
    <result column="oper_name" jdbcType="VARCHAR" property="operName" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    bank_prod_id, bank_code, bank_name, prod_code, status, remark, valid, oper_id, oper_name, 
    create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from pay_bank_product
    where bank_prod_id = #{bankProdId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from pay_bank_product
    where bank_prod_id = #{bankProdId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.hbfintech.pay.trade.repository.entity.PayBankProduct">
    <selectKey keyProperty="bankProdId" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into pay_bank_product (bank_code, bank_name, prod_code, 
      status, remark, valid, 
      oper_id, oper_name, create_time, 
      update_time)
    values (#{bankCode,jdbcType=VARCHAR}, #{bankName,jdbcType=VARCHAR}, #{prodCode,jdbcType=VARCHAR}, 
      #{status,jdbcType=TINYINT}, #{remark,jdbcType=VARCHAR}, #{valid,jdbcType=BIT}, 
      #{operId,jdbcType=BIGINT}, #{operName,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.hbfintech.pay.trade.repository.entity.PayBankProduct">
    <selectKey keyProperty="bankProdId" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into pay_bank_product
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="bankCode != null">
        bank_code,
      </if>
      <if test="bankName != null">
        bank_name,
      </if>
      <if test="prodCode != null">
        prod_code,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="valid != null">
        valid,
      </if>
      <if test="operId != null">
        oper_id,
      </if>
      <if test="operName != null">
        oper_name,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="bankCode != null">
        #{bankCode,jdbcType=VARCHAR},
      </if>
      <if test="bankName != null">
        #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="prodCode != null">
        #{prodCode,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="valid != null">
        #{valid,jdbcType=BIT},
      </if>
      <if test="operId != null">
        #{operId,jdbcType=BIGINT},
      </if>
      <if test="operName != null">
        #{operName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hbfintech.pay.trade.repository.entity.PayBankProduct">
    update pay_bank_product
    <set>
      <if test="bankCode != null">
        bank_code = #{bankCode,jdbcType=VARCHAR},
      </if>
      <if test="bankName != null">
        bank_name = #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="prodCode != null">
        prod_code = #{prodCode,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="valid != null">
        valid = #{valid,jdbcType=BIT},
      </if>
      <if test="operId != null">
        oper_id = #{operId,jdbcType=BIGINT},
      </if>
      <if test="operName != null">
        oper_name = #{operName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where bank_prod_id = #{bankProdId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hbfintech.pay.trade.repository.entity.PayBankProduct">
    update pay_bank_product
    set bank_code = #{bankCode,jdbcType=VARCHAR},
      bank_name = #{bankName,jdbcType=VARCHAR},
      prod_code = #{prodCode,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT},
      remark = #{remark,jdbcType=VARCHAR},
      valid = #{valid,jdbcType=BIT},
      oper_id = #{operId,jdbcType=BIGINT},
      oper_name = #{operName,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where bank_prod_id = #{bankProdId,jdbcType=BIGINT}
  </update>
  
    <select id="getProdOpenBanks" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from pay_bank_product
    where prod_code=  #{prodCode,jdbcType=VARCHAR} 
              and status =1 and valid = 0 
  </select>
  
      <select id="getByProdAndBankCode" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from pay_bank_product
    where prod_code=  #{prodCode,jdbcType=VARCHAR} 
              and bank_code = #{bankCode,jdbcType=VARCHAR}
              and valid = 0 
  </select>
</mapper>